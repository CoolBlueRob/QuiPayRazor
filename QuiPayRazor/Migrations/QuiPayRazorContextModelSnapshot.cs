// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuiPayRazor.Data;

namespace QuiPayRazor.Migrations
{
    [DbContext(typeof(QuiPayRazorContext))]
    partial class QuiPayRazorContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("QuiPayRazor.Models.Account", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountState")
                        .HasColumnType("int");

                    b.Property<int>("AccountType")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<int>("CurrencyID")
                        .HasColumnType("int");

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("WhenCreated")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("MemberID");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("QuiPayRazor.Models.Address", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AddressType")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MemberIdentityID")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("WhenCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("MemberIdentityID");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("QuiPayRazor.Models.Currency", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Coin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoinSymbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CurrencyState")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoteSymbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("WhenCreated")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("QuiPayRazor.Models.EmailAddress", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressTyoe")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MemberIdentityID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MemberIdentityID");

                    b.ToTable("EmailAddress");
                });

            modelBuilder.Entity("QuiPayRazor.Models.Member", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MemberState")
                        .HasColumnType("int");

                    b.Property<DateTime>("WhenCreated")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("QuiPayRazor.Models.MemberIdentity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MemberDetailsState")
                        .HasColumnType("int");

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("WhenCreated")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("MemberID");

                    b.ToTable("MemberIdentity");
                });

            modelBuilder.Entity("QuiPayRazor.Models.MemberTrust", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("ID");

                    b.ToTable("MemberTrust");
                });

            modelBuilder.Entity("QuiPayRazor.Models.Payment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<int>("FromAccountID")
                        .HasColumnType("int");

                    b.Property<int>("PaymentState")
                        .HasColumnType("int");

                    b.Property<int>("RefundPaymentID")
                        .HasColumnType("int");

                    b.Property<int>("ToAccountID")
                        .HasColumnType("int");

                    b.Property<DateTime>("WhenAccepted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("WhenDeclined")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("WhenProposed")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("QuiPayRazor.Models.PhoneNumber", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressTyoe")
                        .HasColumnType("int");

                    b.Property<int>("MemberIdentityID")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("MemberIdentityID");

                    b.ToTable("PhoneNumber");
                });

            modelBuilder.Entity("QuiPayRazor.Models.Voucher", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<int>("BankNoteState")
                        .HasColumnType("int");

                    b.Property<int>("Printed")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Voucher");
                });

            modelBuilder.Entity("QuiPayRazor.Models.VoucherAccountLut", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountID")
                        .HasColumnType("int");

                    b.Property<int>("BankNoteAccountLutState")
                        .HasColumnType("int");

                    b.Property<int>("BankNoteID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AccountID");

                    b.HasIndex("BankNoteID");

                    b.ToTable("VoucherAccountLut");
                });

            modelBuilder.Entity("QuiPayRazor.Models.Account", b =>
                {
                    b.HasOne("QuiPayRazor.Models.Member", null)
                        .WithMany("Accounts")
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QuiPayRazor.Models.Address", b =>
                {
                    b.HasOne("QuiPayRazor.Models.MemberIdentity", "MemberIdentity")
                        .WithMany("Addresses")
                        .HasForeignKey("MemberIdentityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QuiPayRazor.Models.EmailAddress", b =>
                {
                    b.HasOne("QuiPayRazor.Models.MemberIdentity", "MemberIdentity")
                        .WithMany("EmailAddresses")
                        .HasForeignKey("MemberIdentityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QuiPayRazor.Models.MemberIdentity", b =>
                {
                    b.HasOne("QuiPayRazor.Models.Member", "Member")
                        .WithMany("MemberIdentitys")
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QuiPayRazor.Models.PhoneNumber", b =>
                {
                    b.HasOne("QuiPayRazor.Models.MemberIdentity", "MemberIdentity")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("MemberIdentityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QuiPayRazor.Models.VoucherAccountLut", b =>
                {
                    b.HasOne("QuiPayRazor.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuiPayRazor.Models.Voucher", "BankNote")
                        .WithMany()
                        .HasForeignKey("BankNoteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
